# Plan Script Type: deploy

# Plan Script Description:
# Validate the Golden Image/OS-Volume against invalid captures and prepare the RC 
# file to be modified by the deployment Plan Scripts. When needed, copy the 
# bootloader in the EFI/BOOT directory of the UEFI partition. Tested with 
# CentOS-1810, XenServer 7.6. Should work fine with SLE 15

# ##########################################
# Prepare-for-DeploymentPS-FDZ
# Version: 0.2
# ##########################################

# (c) Copyright 2017 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.


# NOTE: The output of guestfish commands goes to the OS-Volume
# Activity log file ONLY if the first mount command is successful.
# If the first mount command fails, you must check the
# Image Streamer Activity log file to understand why
# the first mount command failed.



# The output of the following guestfish echo commands goes 
# into the OS-Volume Activity log file.
echo
echo "======================================="
echo "Prepare-for-DeploymentPS-FDZ"
echo "======================================="
echo

# Some OSs like CentOS and XerServer need the
# bootloader in the /EFI/BOOT directory of the UEFI vfat partition. 
# 
# NOTE: the following code should be re-written with a case-esac to be nicer....
#

# CentOS
<!if $(grep -q "centos" ./OS-Type) ; then echo 'echo " CentOS: Copying the bootloader in the /EFI/BOOT directory of the UEFI partition."' ; fi
<!if $(grep -q "centos" ./OS-Type) ; then awk -F ":" '/vfat/ {print "-mount", $1, "/boot"}' ./list-fs; fi
<!if $(grep -q "centos" ./OS-Type) ; then echo "cp /boot/EFI/centos/grubx64.efi /boot/EFI/BOOT/." ; fi

# XenServer
<!if $(grep -q "xen" ./OS-Type) ; then echo 'echo " XenServer: Copying the bootloader in the /EFI/BOOT directory of the UEFI partition."' ; fi
<!if $(grep -q "xen" ./OS-Type) ; then awk -F ":" '/vfat/ {print "-mount", $1, "/boot"}' ./list-fs; fi
<!if $(grep -q "xen" ./OS-Type) ; then echo "-mkdir /boot/EFI/BOOT " ; echo "cp /boot/EFI/xenserver/grubx64.efi /boot/EFI/BOOT/bootx64.efi" ; fi

# In case of XenServer create a bootx64.cfg file. 
upload -<<END /temp/bootx64.cfg-for-XenServer
default=0
timeout=2
title Chainloader switch to Xenserver
 root (hd0,0)
 chainloader /EFI/XENSERVER/GRUBX64.EFI
END

# If XenServer move the pre-created bootx64-cfg to /boot/EFI/BOOT/bootx64.cfg
<!if $(grep -q "xen" ./OS-Type) ; then echo 'echo " XenServer: Moving pre-created bootx64.cfg to /boot/EFI/BOOT/ directory."' ; fi
<!if $(grep -q "xen" ./OS-Type) ; then echo "-mv /temp/bootx64.cfg-for-XenServer /boot/EFI/BOOT/bootx64.cfg" ; fi


# The output of the following guestfish command
# goes in the OS-Volume Activity log file.
echo " Check Image Streamer capture details"

# The following guestfish command copies out the /ImageStreamerCapture
# file from the OS-Volume to the Image Streamer. If this command
# fails, guestfish will continue anyway.
-download /ImageStreamerCapture ./ImageStreamerCapture

# Creation of a shell script in the OS-Volume to check 
# if it has been correctly generated by a valid Golden Image.
# This script will be pushed out to the Image Streamer for
# execution.
# Because the execution of this script is performed by the Image
# Streamer, the output of its commands (i.e. echo) goes
# in the OS-Volume Activity log file.
upload -<<END /temp/ImageStreamer/check_capture
#!/bin/bash
if [ -f ./ImageStreamerCapture ]; then
 echo " Capture details:"
 cat ./ImageStreamerCapture
else
 echo
 echo "WARNING: Golden Image not captured by Image Streamer."
 echo "Golden Image may not be prepared for correct customization."
 echo "Recommend deploying Golden Image as is and capturing a new"
 echo "Golden Image using Image Streamer via correct capture Build Plan"
 echo
fi
echo
END

# The following command copies out the above script
# to the Image Streamer.
download /temp/ImageStreamer/check_capture ./check_capture

# The following commands asks the Image Streamer to launch the 
# above script.
!source ./check_capture


# The following guestfish commands cleans
# several files in the OS-Volume. They will
# be re-created by the corresponding systemctl services.
# If a file does not exist, guestfish will continue anyway.
echo " Cleanup various files (for safety)"
-rm-f /var/log/messages
-rm-f /var/log/wtmp
-rm-f /var/log/btmp
-rm-f /var/log/secure

# Guestfish removal of the /ImageStreamerCapture file.
# We don't need it anymore since we are now in an OS-Volume
# and not a Golden Image anymore.
-rm-f /ImageStreamerCapture
